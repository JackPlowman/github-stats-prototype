[tool.poetry]
name = "analyser"
version = "0.1.0"
description = ""
authors = ["Jack Plowman <62281988+JackPlowman@users.noreply.github.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
pygithub = "2.3.0"
mdutils = "1.6.0"

[tool.poetry.group.dev.dependencies]
ruff = "0.6.2"
pytest = "8.3.2"
vulture = "2.11"
bandit = "1.7.9"
pytest-cov = "5.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
# Add the `line-too-long` rule to the enforced rule set.
extend-select = ["E501"]
select = ["ALL"]

ignore = [
    "COM812",  # Ignore due to conflict with Ruff formatter
    "ISC001",  # Ignore due to conflict with Ruff formatter
    "PLR2004",
    "D104",
    "D100",
    "N999", # Ignore invalid module name
    "T201" # Allow print for now
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"**test_*.py" = ["S101", "D102", "D103", "SLF001"]

[tool.ruff.lint.pydocstyle]
convention = "google" # Use Google docstring convention.

[tool.ruff.lint.isort]
known-first-party = ["analyser", "markdown"]

[tool.bandit]
exclude_dirs = ["tests"]
